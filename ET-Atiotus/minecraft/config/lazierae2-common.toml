
###################################################################################
# This section lets you configure the various values of the mod machines.         #
# If there is an option mentioning 'upgrades', AE2 Acceleration Cards are meant.  #
###################################################################################
[aggregator]
	# The number of upgrades the aggregator can hold.
	# By default, upgrades will speed up the machine and increase the energy buffer at the cost of a higher energy consumption.
	#Range: 0 ~ 64
	upgrade_slots = 8
	# The amount of energy the aggregator can hold.
	# The energy buffer is used to store energy before it is used.
	#Range: > 0
	energy_buffer_base = 100000
	# The additional amount of energy the aggregator can hold per upgrade.
	# Each upgrade increases the energy buffer by this amount.
	# Setting this to 0 will disable the energy buffer upgrade.
	# Calculation: energyBuffer = baseEnergyBuffer + (installedUpgrades * energyBufferAdd)
	#Range: > 0
	energy_buffer_add = 50000
	# The base amount of energy the aggregator uses per tick.
	# Each recipe can overwrite this value. This is just a fallback value if a recipe does not specify an energy usage.
	# All recipes from the mod itself have an own energy usage value and this setting won't have any effect on them.
	# This is only useful for custom recipes e.g. for modpack makers.
	#Range: > 0
	energy_usage_base = 300
	# The energy multiplier the aggregator uses per tick when upgraded.
	# Each upgrade multiplies the energy usage by this value.
	# Setting this to 1 will disable the energy usage multiplier.
	# Lower values than 1 will decrease the energy usage, higher values will increase it.
	# Calculation: energyUsage = baseEnergyUsage * energyUsageMulti ^ installedUpgrades
	#Range: 0.0 ~ 1.7976931348623157E308
	energy_usage_multi = 1.3
	# The base processing time the aggregator needs for a recipe.
	# Each recipe can overwrite this value. This is just a fallback value if a recipe does not specify a processing time.
	# All recipes from the mod itself have an own processing time value and this setting won't have any effect on them.
	# This is only useful for custom recipes e.g. for modpack makers.
	#Range: > 0
	process_time_base = 200
	# The processing time multiplier the aggregator uses when upgraded.
	# Each upgrade multiplies the processing time for a recipe by this value.
	# Setting this to 1 will disable the processing time multiplier.
	# Lower values than 1 will decrease the processing time, higher values will increase it.
	# Calculation: processTime = baseProcessTime * processTimeMulti ^ installedUpgrades
	#Range: 0.0 ~ 1.7976931348623157E308
	process_time_multi = 0.8

[centrifuge]
	# The number of upgrades the centrifuge can hold.
	# By default, upgrades will speed up the machine and increase the energy buffer at the cost of a higher energy consumption.
	#Range: 0 ~ 64
	upgrade_slots = 8
	# The amount of energy the centrifuge can hold.
	# The energy buffer is used to store energy before it is used.
	#Range: > 0
	energy_buffer_base = 100000
	# The additional amount of energy the centrifuge can hold per upgrade.
	# Each upgrade increases the energy buffer by this amount.
	# Setting this to 0 will disable the energy buffer upgrade.
	# Calculation: energyBuffer = baseEnergyBuffer + (installedUpgrades * energyBufferAdd)
	#Range: > 0
	energy_buffer_add = 50000
	# The base amount of energy the centrifuge uses per tick.
	# Each recipe can overwrite this value. This is just a fallback value if a recipe does not specify an energy usage.
	# All recipes from the mod itself have an own energy usage value and this setting won't have any effect on them.
	# This is only useful for custom recipes e.g. for modpack makers.
	#Range: > 0
	energy_usage_base = 300
	# The energy multiplier the centrifuge uses per tick when upgraded.
	# Each upgrade multiplies the energy usage by this value.
	# Setting this to 1 will disable the energy usage multiplier.
	# Lower values than 1 will decrease the energy usage, higher values will increase it.
	# Calculation: energyUsage = baseEnergyUsage * energyUsageMulti ^ installedUpgrades
	#Range: 0.0 ~ 1.7976931348623157E308
	energy_usage_multi = 1.3
	# The base processing time the centrifuge needs for a recipe.
	# Each recipe can overwrite this value. This is just a fallback value if a recipe does not specify a processing time.
	# All recipes from the mod itself have an own processing time value and this setting won't have any effect on them.
	# This is only useful for custom recipes e.g. for modpack makers.
	#Range: > 0
	process_time_base = 200
	# The processing time multiplier the centrifuge uses when upgraded.
	# Each upgrade multiplies the processing time for a recipe by this value.
	# Setting this to 1 will disable the processing time multiplier.
	# Lower values than 1 will decrease the processing time, higher values will increase it.
	# Calculation: processTime = baseProcessTime * processTimeMulti ^ installedUpgrades
	#Range: 0.0 ~ 1.7976931348623157E308
	process_time_multi = 0.8

[energizer]
	# The number of upgrades the energizer can hold.
	# By default, upgrades will speed up the machine and increase the energy buffer at the cost of a higher energy consumption.
	#Range: 0 ~ 64
	upgrade_slots = 8
	# The amount of energy the energizer can hold.
	# The energy buffer is used to store energy before it is used.
	#Range: > 0
	energy_buffer_base = 100000
	# The additional amount of energy the energizer can hold per upgrade.
	# Each upgrade increases the energy buffer by this amount.
	# Setting this to 0 will disable the energy buffer upgrade.
	# Calculation: energyBuffer = baseEnergyBuffer + (installedUpgrades * energyBufferAdd)
	#Range: > 0
	energy_buffer_add = 50000
	# The base amount of energy the energizer uses per tick.
	# Each recipe can overwrite this value. This is just a fallback value if a recipe does not specify an energy usage.
	# All recipes from the mod itself have an own energy usage value and this setting won't have any effect on them.
	# This is only useful for custom recipes e.g. for modpack makers.
	#Range: > 0
	energy_usage_base = 300
	# The energy multiplier the energizer uses per tick when upgraded.
	# Each upgrade multiplies the energy usage by this value.
	# Setting this to 1 will disable the energy usage multiplier.
	# Lower values than 1 will decrease the energy usage, higher values will increase it.
	# Calculation: energyUsage = baseEnergyUsage * energyUsageMulti ^ installedUpgrades
	#Range: 0.0 ~ 1.7976931348623157E308
	energy_usage_multi = 1.3
	# The base processing time the energizer needs for a recipe.
	# Each recipe can overwrite this value. This is just a fallback value if a recipe does not specify a processing time.
	# All recipes from the mod itself have an own processing time value and this setting won't have any effect on them.
	# This is only useful for custom recipes e.g. for modpack makers.
	#Range: > 0
	process_time_base = 200
	# The processing time multiplier the energizer uses when upgraded.
	# Each upgrade multiplies the processing time for a recipe by this value.
	# Setting this to 1 will disable the processing time multiplier.
	# Lower values than 1 will decrease the processing time, higher values will increase it.
	# Calculation: processTime = baseProcessTime * processTimeMulti ^ installedUpgrades
	#Range: 0.0 ~ 1.7976931348623157E308
	process_time_multi = 0.8

[etcher]
	# The number of upgrades the etcher can hold.
	# By default, upgrades will speed up the machine and increase the energy buffer at the cost of a higher energy consumption.
	#Range: 0 ~ 64
	upgrade_slots = 8
	# The amount of energy the etcher can hold.
	# The energy buffer is used to store energy before it is used.
	#Range: > 0
	energy_buffer_base = 100000
	# The additional amount of energy the etcher can hold per upgrade.
	# Each upgrade increases the energy buffer by this amount.
	# Setting this to 0 will disable the energy buffer upgrade.
	# Calculation: energyBuffer = baseEnergyBuffer + (installedUpgrades * energyBufferAdd)
	#Range: > 0
	energy_buffer_add = 50000
	# The base amount of energy the etcher uses per tick.
	# Each recipe can overwrite this value. This is just a fallback value if a recipe does not specify an energy usage.
	# All recipes from the mod itself have an own energy usage value and this setting won't have any effect on them.
	# This is only useful for custom recipes e.g. for modpack makers.
	#Range: > 0
	energy_usage_base = 300
	# The energy multiplier the etcher uses per tick when upgraded.
	# Each upgrade multiplies the energy usage by this value.
	# Setting this to 1 will disable the energy usage multiplier.
	# Lower values than 1 will decrease the energy usage, higher values will increase it.
	# Calculation: energyUsage = baseEnergyUsage * energyUsageMulti ^ installedUpgrades
	#Range: 0.0 ~ 1.7976931348623157E308
	energy_usage_multi = 1.3
	# The base processing time the etcher needs for a recipe.
	# Each recipe can overwrite this value. This is just a fallback value if a recipe does not specify a processing time.
	# All recipes from the mod itself have an own processing time value and this setting won't have any effect on them.
	# This is only useful for custom recipes e.g. for modpack makers.
	#Range: > 0
	process_time_base = 200
	# The processing time multiplier the etcher uses when upgraded.
	# Each upgrade multiplies the processing time for a recipe by this value.
	# Setting this to 1 will disable the processing time multiplier.
	# Lower values than 1 will decrease the processing time, higher values will increase it.
	# Calculation: processTime = baseProcessTime * processTimeMulti ^ installedUpgrades
	#Range: 0.0 ~ 1.7976931348623157E308
	process_time_multi = 0.8

